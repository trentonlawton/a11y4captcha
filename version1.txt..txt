













Designing Accessible Captcha: Practical solutions for legacy Captcha systems
Trenton Lawton
V1.0
 

1. Introduction
1.1. What is Captcha
1.2. Legacy Captcha
1.3. Re Captcha

2. Legacy Captcha
2.1. Problem study
2.2. WCAG 2.0
2.3. Solution Intro
3. Data Flow (Legacy Captcha)
3.1. Data Diagram
3.2. Captcha UI component-Captcha api
3.3. Captcha UI – User Interaction
4. Data Flow (Accessible Captcha)
4.1. Data Diagram
4.2. Solving the break
	




1.Introduction
     Captcha or Completely Automated Public Turing test is a piece of software used to differentiate between human and computer. Captcha was created in 1997 by Mark Lillibridge,Martin Abadi,Krishna Bharat, and Andrei Z.Broder. Captcha’s ability historically has relied on the use of obscured images of characters to validate human interaction, but in later years has been replaced with variants of video, images, and audio, which we will discuss in the following recaptcha sections.
     Legacy Captcha will be defined as Captcha that relies exclusively on the use of obscured images of text in order to validate human interaction. Legacy Captcha is still prevalent on a large number of sites that may be slow adapters to recaptcha or favor the simplicity of Legacy Captcha systems. Legacy Captcha systems are very straightforward in terms of their use case and overall complexity in regards to ui. A typical legacy system will usually consist of four ui components a image of obscured text, a refresh button, a input field for the validating the image, and a submit button.  This results in a linear use case that involves 
     1.The User looks at the obscured text(If the user cant read the given string they refresh for a new image)
     2.They input the letters and numbers they see in the above image in an input field
     3.They click submit and their form is validated
	However, the problem with legacy Captcha systems is that they are completely inaccessible to users with partial or complete loss of vision. This will often cause the at user to abandon the Captcha test since there is no explicit way for them to independently interact with the Captcha ui which will ultimately lead to form abandonment. In addition, normal sighted user may also find the Legacy Captcha system to be difficult to pass and may want the option to be provided with a read out.

	Recaptcha was created in 2007 and follows the moniker , “Tough on bots easy on humans”. Over time Google recaptcha has transformed from what used to be a Legacy Captcha system to an interactive experience that often relies on users selecting images based on a question. Where recaptcha shines in terms of its accessibility is its built in audio readout. This allows the A.T. user to bypass the image based Captcha challenge and get an audio-based test instead. This approach is beneficial for those with partial or complete blindness. Some of the drawbacks with recaptcha are that they require the user to interact more with the Recaptcha UI than a Legacy Captcha experience. This greatly increases the complexity in terms of both ui components and also functionality when compared to a Legacy Captcha Context.

2.Legacy Captcha
	So as mentioned earlier legacy Captcha has a significant problem in regards to visual accessibility. In short, legacy Captcha systems are often completely inaccessible for those with visual impairments. We know that from recaptcha that to overcome this we can instate an audio test in favor of a visual test. By introducing such a component to your Legacy Captcha systems you are not only improving inclusivity, but also reducing the likelihood of form abandonment which could lead to increase of sales,users,comments, or whatever assets the Legacy Captcha enabled form creates. 
     By implementing accessibility into Legacy Captcha according to WCAG 2.0 you’re insuring that you’re implementing UI components in a way that is not limiting to users with varying abilities. Referencing WCAG 2.0, we can conclude that legacy Captcha (often) breaks Guideline 1.1.1 “CAPTCHA: If the purpose of non-text content is to confirm that content is being accessed by a person rather than a computer, then text alternatives that identify and describe the purpose of the non-text content are provided, and alternative forms of CAPTCHA using output modes for different types of sensory perception are provided to accommodate different disabilities.”(Web Content Accessibility Guidelines (WCAG) 2.0). When we use Captcha that relies exclusively on one sensory perception we are causing conflicts among people with varying abilities. By providing alternatives such as sight, sound, and feel(possibly in the future). We’re insuring that our applications are accessible to a diverse collective of users and ultimately giving them the same level of independence that is given to an abled user.
     Our solution to combat the inaccessibility of Legacy Captcha systems (in present day) is to provide the user with an equivalent auditory readout of the Captcha string. This solution however, does come with numerous conflicts such as security, usability, and performance(since it will often always be faster for a sighted user to validate Captcha).However, the benefits of having accessible Legacy Captcha heavily outweighs the short comings of implementing the said approach.


3.Data Flow 
	A user’s interaction with Legacy Captcha is heavily based on the flow of data to and from the client. In summary, when a client renders a Captcha enabled form, the page gets a Captcha image from some Captcha api/generator. The user then perceives the Captcha image and enters the results. When the user submits these results they post the their answer to the Captcha api/generator which will then validate the user results. The api will the return the results of the validation. When a user who is visually impaired renders the Captcha enabled form they get the Captcha image, but will never be able to post their results with confidence without the use of accessible Captcha.


The data flow in Legacy Captcha system relies on a user submitting a string for validation. When an A.T user encounters legacy Captcha their interaction with the captcha stops at form load and Captcha refresh.  This is because the user cannot perceive the Captcha image the second half of the Captcha validation doesn’t occur in the dataflow diagram.


4.Data Flow (Accessible Legacy Captcha)

As described in the data flow section  the A.T. users Captcha experience is limited to both on load and refresh. In order to allow a low vision user to interact with Legacy Captcha we have to build onto the existing functionality of the Captcha form. This is done by introducing a new path the that user can go down to interact with the ui. This path is the accessibility path and to allow it work in our legacy system we have to make some changes to our UI and introduce additional logic to the Captcha data flow. Those changes include introducing a accessibility button,trigger,or link that will initialize validation for an accessible session. Giving the user a token that confirms that they are authorized for an accessible session. Lastly, a button that gets the string equivalent of a legacy Captcha image.

